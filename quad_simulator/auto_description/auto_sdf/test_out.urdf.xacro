<?xml version="1.0"?>

<!-- 
MIT License (modified)
Copyright (c) 2020 Ghost Robotics
Authors:
Avik De <avik@ghostrobotics.io>
Tom Jacobs <tom.jacobs@ghostrobotics.io>
Permission is hereby granted, free of charge, to any person obtaining a copy
of this **file** (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. 
--><robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="spirit">

	<!-- Define parameters -->
	<!-- bodyLength + hipdx should be equal to front to back hip distance -->
	<!-- dy +  dPodAxisToEdge + upperLegWidth should be equal to the center to toe distance along y axis-->
	<xacro:property name="pi" value="3.14159265359"/>
	<xacro:property name="bodyLength" value="0.335"/>
	<xacro:property name="bodyWidth" value="0.24"/>
	<xacro:property name="bodyHeight" value="0.104"/>
	<xacro:property name="bodyMass" value="5.75"/>
	<xacro:property name="podMass" value="0.575"/>
	<xacro:property name="upperLegMass" value="0.775"/>
	<xacro:property name="upperLegIxx" value="0.00005"/> <!-- guess -->
	<xacro:property name="upperLegIyy" value="0.001"/> <!-- guess -->
	<xacro:property name="upperLegIzz" value="0.001"/> <!-- guess -->
	<xacro:property name="lowerLegMass" value="0.075"/>
	<xacro:property name="lowerLegIxx" value="0.000005"/> <!-- guess -->
	<xacro:property name="lowerLegIyy" value="0.0001"/> <!-- guess -->
	<xacro:property name="lowerLegIzz" value="0.0001"/> <!-- guess -->
	<xacro:property name="toeMass" value="0.015"/>
	<xacro:property name="upperLegLength" value="0.206"/>
	<xacro:property name="upperLegWidth" value="0.022"/>
	<xacro:property name="upperLegHeight" value="0.055"/>
	<xacro:property name="lowerLegLength" value="0.206"/>
	<xacro:property name="lowerLegRadius" value="0.013"/> <!--visual only-->
	<xacro:property name="podLength" value="0.08"/>
	<xacro:property name="podRadius" value="0.055"/>
	<xacro:property name="dPodAxisToEdge" value="0.028"/> <!--center of pod cylinder to the ab axis-->
	<xacro:property name="abOffs" value="0.10098"/> 
	<xacro:property name="dx" value="0.2263"/>
	<xacro:property name="dy" value="0.07"/>
	<xacro:property name="toeRadius" value="0.02"/>
	<xacro:property name="toeOffset" value="0.0"/>
	<xacro:property name="toeStiffness" value="30000.0"/>
	<xacro:property name="toeDamping" value="1000.0"/>
	<xacro:property name="toeSpinningFriction" value="0.3"/>
	<xacro:property name="toeFriction" value="100.0"/>
	<xacro:property name="toeLateralFriction" value="50.0"/>
	<xacro:property name="abKinLimit" value="0.707"/>
	<xacro:property name="abSpeedLimit" value="30"/>
	<xacro:property name="abEffortLimit" value="40"/>
	<xacro:property name="jointSpeedLimit" value="30"/>
	<xacro:property name="jointEffortLimit" value="40"/>
	<!-- Additional limb: tail or neck-->
	<xacro:property name="neckAttachmentX" value="0.3"/>
	<xacro:property name="neckLength1" value="0.28"/>
	<xacro:property name="neckLength2" value="0.08"/>
	<xacro:property name="neckWidth" value="0.02"/>
	<xacro:property name="neckHeight" value="0.02"/>
	<xacro:property name="neckDensity1" value="100.0"/>
	<xacro:property name="neckDensity2" value="10.0"/>
	<xacro:property name="objMass" value="0.005"/>

	<!-- Body -->
	<link name="body">
		<visual>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
				<box size="${bodyLength} ${bodyWidth} ${bodyHeight}"/>
			</geometry>
			<material name="darkgray"/>
		</visual>

		<inertial>
			<mass value="${bodyMass}"/>
			<!-- Uniform box -->
			<!-- <inertia ixx="1/12*${bodyMass}*(${bodyWidth}*${bodyWidth} + ${bodyHeight}*${bodyHeight})"  ixy="0"  ixz="0" iyy="1/12*${bodyMass}*(${bodyLength}*${bodyLength} + ${bodyHeight}*${bodyHeight})" iyz="0" izz="1/12*${bodyMass}*(${bodyLength}*${bodyLength} + ${bodyWidth}*${bodyWidth})"/> -->
			<inertia ixx="0.05" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
		</inertial>

		<!-- Just copy geometry for collision -->
		<collision>
		<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
				<box size="${bodyLength} ${bodyWidth} ${bodyHeight}"/>
				<!-- <uri>model:///meshes/Spirit40_Body_Mesh_transformed.stl</uri> -->
			</geometry>
		</collision>
	</link>
	<gazebo reference="body">
    	<material>Gazebo/Black</material>
        <gravity>true</gravity>
  	</gazebo>
	<!-- Define our leg macro -->
	<xacro:macro name="leg" params="suffix left front hipJointName kneeJointName abductionJointName hipJointLowerLimit hipJointUpperLimit color">

		<!-- Hip motor -->
		<link name="hip${suffix}">
			<visual>
				<origin rpy="${pi/2} 0 0" xyz="${front * 0} ${left * (dPodAxisToEdge)} 0"/>
				<geometry>
					<cylinder length="${podLength}" radius="${podRadius}"/>
				</geometry>
			</visual>
			
			<collision>
				<origin rpy="${pi/2} 0 0" xyz="0 ${left * (dPodAxisToEdge)} 0"/>
				<geometry>Radius
					<!-- <cylinder length="${podLength}" radius="${podRadius}"/> -->
					<box size="${2*podRadius} ${2*podRadius} ${podLength}"/>
				</geometry>
			</collision>

			<inertial>
    			<origin rpy="${pi/2} 0 0" xyz="0 ${left * (dPodAxisToEdge)} 0"/>
				<mass value="${podMass}"/>
				<!-- <inertia ixx="1/12*${podMass}*${podLength}*${podLength} + 1/4*${podMass}*${podRadius}*${podRadius}"  ixy="0"  ixz="0" iyy="1/12*${podMass}*${podLength}*${podLength} + 1/4*${podMass}*${podRadius}*${podRadius}" iyz="0" izz="1/2*${podMass}*${podRadius}*$
				{podRadius}" /> -->
				<inertia ixx="0.00066963541" ixy="0" ixz="0" iyy="0.00066963541" iyz="0" izz="0.0008696875"/>
			</inertial>
		</link>
		<gazebo reference="hip${suffix}">
			<material>Gazebo/Grey</material>
  		</gazebo>
		<!-- Upper leg -->
		<link name="upper${suffix}">
			<visual>
				<origin rpy="0 0 0" xyz="-${upperLegLength/2} ${-left*upperLegWidth} 0"/>
				<geometry>
					<box size="${upperLegLength} ${upperLegWidth} ${upperLegHeight}"/>
				</geometry>
				<material name="silver"/>
			</visual>
			
			<collision>
				<origin rpy="0 0 0" xyz="-${upperLegLength/2} ${-left*upperLegWidth} 0"/>
				<geometry>
					<box size="${upperLegLength} ${upperLegWidth} ${upperLegHeight}"/>
				</geometry>
			</collision>
			<inertial>
				<origin rpy="0 0 0" xyz="-${upperLegLength/2} ${-left*upperLegWidth} 0"/>
				<mass value="${upperLegMass}"/>
				<inertia ixx="${upperLegIxx}" ixy="0" ixz="0" iyy="${upperLegIyy}" iyz="0" izz="${upperLegIzz}"/>
			</inertial>
		</link>
		<gazebo reference="upper${suffix}">
			<material>Gazebo/DarkGrey</material>
  		</gazebo>
		<!-- Abduction joint. Joint names are: 8 9 10 11 -->
		<joint name="${abductionJointName}" type="revolute">
			<parent link="body"/>
			<child link="hip${suffix}"/>
			<axis xyz="1 0 0"/>
			<origin xyz="${front *bodyLength/2+front * podRadius} ${left *bodyWidth/2+left*upperLegWidth-left*podLength} 0"/>
			<!-- <origin xyz="${front * dx} ${left * dy} 0"/> -->
			<!-- <origin xyz="${front *bodyLength/2+front * podRadius} ${left *bodyWidth/2} 0"/> -->

			<limit effort="${abEffortLimit}" velocity="${abSpeedLimit}" lower="${-abKinLimit}" upper="${abKinLimit}"/>
			<dynamics damping="0.0" friction="0.0"/>
		</joint>
		<!-- Transmission elements required for Gazebo -->
		<transmission name="transmission_${abductionJointName}">
    		<type>transmission_interface/SimpleTransmission</type>
    		<joint name="${abductionJointName}">
      			<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    		</joint>
    		<actuator name="motor_${abductionJointName}">
      			<hardwareInterface>EffortJointInterface</hardwareInterface>
      			<mechanicalReduction>1</mechanicalReduction>
    		</actuator>
  		</transmission>
		<!-- Hip joint. (Motor to upper leg). Joint names are: 0 2 4 6 -->
		<joint name="${hipJointName}" type="revolute">
			<parent link="hip${suffix}"/>
			<child link="upper${suffix}"/>
			<axis xyz="0 -1 0"/>
			<origin xyz="${front * 0} ${left * abOffs} 0"/> <!--  rpy="0 -0.3 0" -->
			<limit effort="${jointEffortLimit}" velocity="${jointSpeedLimit}" lower="${hipJointLowerLimit}" upper="${hipJointUpperLimit}"/>
			<dynamics damping="0.0" friction="0.0"/>
		</joint>

		<!-- Transmission elements required for Gazebo -->
		<transmission name="transmission_${hipJointName}">
    		<type>transmission_interface/SimpleTransmission</type>
    		<joint name="${hipJointName}">
      			<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    		</joint>
    		<actuator name="motor_${hipJointName}">
      			<hardwareInterface>EffortJointInterface</hardwareInterface>
      			<mechanicalReduction>1</mechanicalReduction>
    		</actuator>
  		</transmission>
		<!-- Lower leg -->
		<link name="lower${suffix}">
			<visual>
				<origin rpy="0 ${pi/2} 0" xyz="${lowerLegLength/2} 0 0"/>
				<geometry>
					<cylinder length="${lowerLegLength}" radius="${lowerLegRadius}"/>
				</geometry>
				<material name="darkgray"/>
			</visual>
			
			<collision>
				<origin rpy="0 ${pi/2} 0" xyz="${lowerLegLength/2} 0 0"/>
				<geometry>
					<cylinder length="${lowerLegLength}" radius="${lowerLegRadius}"/>
				</geometry>
			</collision>

			<inertial>
				<origin rpy="0 ${pi/2} 0" xyz="${lowerLegLength/2} 0 0"/>
				<mass value="${lowerLegMass}"/>
				<inertia ixx="${lowerLegIxx}" ixy="0" ixz="0" iyy="${lowerLegIyy}" iyz="0" izz="${lowerLegIzz}"/>
			</inertial>
		</link>
		<gazebo reference="lower${suffix}">
			<material>Gazebo/Grey</material>
  		</gazebo>

  		<!-- Knee joint. Joint names are: 1 3 5 7 -->
		<joint name="${kneeJointName}" type="revolute">
			<parent link="upper${suffix}"/>
			<child link="lower${suffix}"/>
			<axis xyz="0 1 0"/>
			<origin xyz="-${upperLegLength} 0 0"/> <!--rpy="0 0.5 0"-->
			<limit effort="${jointEffortLimit}" velocity="${jointSpeedLimit}" lower="0" upper="${pi}"/>
			<dynamics damping="0.0" friction="0.0"/>
		</joint>
		<!-- Transmission elements required for Gazebo -->
		<transmission name="transmission_${kneeJointName}">
    		<type>transmission_interface/SimpleTransmission</type>
    		<joint name="${kneeJointName}">
      			<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    		</joint>
    		<actuator name="motor_${kneeJointName}">
      			<hardwareInterface>EffortJointInterface</hardwareInterface>
      			<mechanicalReduction>1</mechanicalReduction>
    		</actuator>
  		</transmission>	
<!-- Toe -->
		<link name="toe${suffix}">
			<contact>
				<friction_anchor/>
				<stiffness value="${toeStiffness}"/>
				<damping value="${toeDamping}"/>
				<spinning_friction value="${toeSpinningFriction}"/>
				<lateral_friction value="${toeLateralFriction}"/>
			</contact>
			<visual>
				<origin rpy="0 0 0" xyz="0 0 0"/>
				<geometry>
					<sphere radius="${toeRadius}"/>
				</geometry>
				<material name="darkgray"/>
			</visual>
			
			<collision>
				<origin rpy="0 0 0" xyz="0 0 0"/>
				<geometry>
					<sphere radius="${toeRadius}"/>
				</geometry>
			</collision>

			<inertial>
				<mass value="${toeMass}"/>
				<inertia ixx="0.000025" ixy="0" ixz="0" iyy="0.000025" iyz="0" izz="0.000025"/>
				<!-- <inertia ixx="2/5*${toeMass}*${toeRadius}*${toeRadius}"  ixy="0"  ixz="0" iyy="2/5*${toeMass}*${toeRadius}*${toeRadius}" iyz="0" izz="2/5*${toeMass}*${toeRadius}*${toeRadius}" /> -->
			</inertial>
		</link>
		<gazebo reference="toe${suffix}">
    		<material>Gazebo/Black</material>
			<collision>
				<surface>
					<bounce>
						<restitution_coefficient>0</restitution_coefficient>
						<threshold>1e+06</threshold>
					</bounce>
					<friction>
						<torsional>
							<coefficient>${toeSpinningFriction}</coefficient>
						</torsional>
						<ode>
							<mu>${toeFriction}</mu>
							<mu2>${toeLateralFriction}</mu2>
						</ode>
						<bullet>
							<rolling_friction>${toeSpinningFriction}</rolling_friction>
							<friction2>${toeLateralFriction}</friction2>
						</bullet>
					</friction>
					<contact>
						<bullet>
							<kp>${toeStiffness}</kp>
							<kd>${toeDamping}</kd>
						</bullet>
						<ode>
							<kp>${toeStiffness}</kp>
							<kd>${toeDamping}</kd>
						</ode>
					</contact>
				</surface>
			</collision>
			<sensor name="toe${suffix}_contact" type="contact">
                <plugin name="toe${suffix}_plugin" filename="libgazebo_ros_bumper.so">
                    <alwaysOn>1</alwaysOn>
                    <updateRate>1000</updateRate>
                    <bumperTopicName>gazebo/toe${suffix}_contact_state</bumperTopicName>
                    <frameName>world</frameName>
                    <robotNamespace>/</robotNamespace>
                </plugin>
                <contact>
                    <collision>toe${suffix}_collision</collision>
                    <topic>__default_topic__</topic>
                </contact>
                <update_rate>1000</update_rate>
            </sensor>			
  		</gazebo>
	</xacro:macro>
	<xacro:leg suffix="0" hipJointName="0" kneeJointName="1" abductionJointName="8" front="1" left="1" hipJointLowerLimit="${-2*pi}" hipJointUpperLimit="${2*pi}" color="darkgray"/>
 	<xacro:leg suffix="1" hipJointName="2" kneeJointName="3" abductionJointName="9" front="-1" left="1" hipJointLowerLimit="${-2*pi}" hipJointUpperLimit="${2*pi}" color="darkgray"/>
 	<xacro:leg suffix="2" hipJointName="4" kneeJointName="5" abductionJointName="10" front="1" left="-1" hipJointLowerLimit="${-2*pi}" hipJointUpperLimit="${2*pi}" color="red"/>
 	<xacro:leg suffix="3" hipJointName="6" kneeJointName="7" abductionJointName="11" front="-1" left="-1" hipJointLowerLimit="${-2*pi}" hipJointUpperLimit="${2*pi}" color="darkgray"/>

	

	
  	<link name="imu::link">
    	<visual>
      		<origin rpy="0 0 0" xyz="0 0 0"/>
      		<geometry>
        		<sphere radius="0.02"/>
      		</geometry>
      		<material name="gray"/>
    	</visual>
    	<inertial>
      		<mass value="0.001"/>
      		<inertia ixx="0.0001" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    	</inertial>
  	</link>	
  	<gazebo reference="imu::link">
    	<material>Gazebo/Gray</material>
    	<sensor name="imu_sensor" type="imu">
            <always_on>1</always_on>
            <update_rate>100</update_rate>
            <visualize>1</visualize>
            <topic>__default_topic__</topic>
            <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
                <topicName>/mcu/state/imu</topicName>
                <bodyName>imu::link</bodyName>
                <robotNamespace>/</robotNamespace>
                <updateRateHZ>500.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu::link</frameName>
                <initialOrientationAsReference>0</initialOrientationAsReference>
            </plugin>
            <pose frame="">0 0 0 0 -0 0</pose>
            <imu/>
    	</sensor>
  	</gazebo>

	<link name="tail_link_0">
		<visual>
			<origin rpy="0 0 0" xyz="${neckLength1/2} 0 0"/>
			<geometry>
				<box size="${neckLength1} ${neckWidth} ${neckHeight}"/>
			</geometry>
			<material name="darkgray"/>
		</visual>

		<inertial>
			<origin rpy="0 0 0" xyz="${neckLength1/2} 0 0"/>
			<mass value="${neckDensity1*neckLength1*neckWidth*neckHeight}"/>
			<inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
		</inertial>

		<!-- Just copy geometry for collision -->
		<!-- <collision>
		<origin rpy="0 0 0" xyz="${neckLength1/2} 0 0"/>
			<geometry>
				<box size="${neckLength1} ${neckWidth} ${neckHeight}"/>
			</geometry>
		</collision> -->
	</link>
  	<gazebo reference="tail_link_0">
    	<material>Gazebo/Gray</material>
  	</gazebo>

	<link name="tail_link_1">
		<visual>
			<origin rpy="0 0 0" xyz="${neckLength2/2} 0 0"/>
			<geometry>
				<box size="${neckLength2} ${neckWidth} ${neckHeight}"/>
			</geometry>
			<material name="darkgray"/>
		</visual>

		<inertial>
		    <origin rpy="0 0 0" xyz="${neckLength2/2} 0 0"/>
			<mass value="${neckDensity2*neckLength2*neckWidth*neckHeight}"/>
			<inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
		</inertial>

		<!-- Just copy geometry for collision -->
		<!-- <collision>
		<origin rpy="0 0 0" xyz="${neckLength2/2} 0 0"/>
			<geometry>
				<box size="${neckLength2} ${neckWidth} ${neckHeight}"/>
			</geometry>
		</collision> -->
	</link>
	<gazebo reference="tail_link_1">
    	<material>Gazebo/Gray</material>
  	</gazebo>

  	<link name="tail_mass">
    	<visual>
      		<origin rpy="0 0 0" xyz="0 0 0"/>
      		<geometry>
        		<sphere radius="0.02"/>
      		</geometry>
      		<material name="gray"/>
    	</visual>
    	<inertial>
      		<mass value="${objMass}"/>
      		<inertia ixx="0.001" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    	</inertial>
		<collision>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
				<sphere radius="0.02"/>
			</geometry>
		</collision>
  	</link>
  	<gazebo reference="tail_mass">
    	<material>Gazebo/Gray</material>
  	</gazebo>

	<joint name="body_tail_joint_0" type="revolute">
   		<parent link="body"/>
    	<child link="tail_link_0"/>
    	<axis xyz="0 1 0"/>
    	<!-- <origin xyz="${neckAttachmentX} 0 0"/> -->
    	<origin xyz="${bodyLength/2} 0 0"/>
    	<limit effort="35" lower="-1.57" upper="-1.57" velocity="1000000"/>
    	<dynamics damping="0.0" friction="0.0"/>
  	</joint>
	 <!-- Transmission elements required for Gazebo -->
  	<transmission name="transmission_body_tail_joint_0">
    	<type>transmission_interface/SimpleTransmission</type>
    	<joint name="body_tail_joint_0">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    	</joint>
    	<actuator name="motor_body_tail_joint_0">
      		<hardwareInterface>EffortJointInterface</hardwareInterface>
      		<mechanicalReduction>1</mechanicalReduction>
    	</actuator>
  	</transmission>
	<joint name="body_tail_joint_1" type="revolute">
    	<parent link="tail_link_0"/>
    	<child link="tail_link_1"/>
    	<axis xyz="0 1 0"/>
    	<origin xyz="${neckLength1} 0 0"/>
    	<limit effort="35" lower="-1.57" upper="1.57" velocity="1000000"/>
    	<dynamics damping="0.0" friction="0.0"/>
  	</joint>
	<!-- Transmission elements required for Gazebo -->
  	<transmission name="transmission_body_tail_joint_1">
    	<type>transmission_interface/SimpleTransmission</type>
    	<joint name="body_tail_joint_1">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    	</joint>
    	<actuator name="motor_body_tail_joint_1">
      		<hardwareInterface>EffortJointInterface</hardwareInterface>
      		<mechanicalReduction>1</mechanicalReduction>
    	</actuator>
  	</transmission>
	<joint name="tail_link_mass_joint" type="fixed">
    	<parent link="tail_link_1"/>
    	<child link="tail_mass"/>
    	<origin xyz="${neckLength2} 0 0"/>
    	<dynamics damping="0.0" friction="0.0"/>
  	</joint>
  	<gazebo reference="tail_link_mass_joint">
        <disableFixedJointLumping>1</disableFixedJointLumping> 
        <preserveFixedJoint>1</preserveFixedJoint>
    </gazebo>
  	
    <xacro:macro name="jtoes" params="suffix">
  		<joint name="jtoe${suffix}" type="fixed">
			<parent link="lower${suffix}"/>
			<child link="toe${suffix}"/>
			<origin xyz="${lowerLegLength} 0 -${toeOffset}"/>
			<dynamics damping="0.0" friction="0.0"/>
		</joint>
		<gazebo reference="jtoe${suffix}">
            <disableFixedJointLumping>1</disableFixedJointLumping> 
            <preserveFixedJoint>1</preserveFixedJoint>
        </gazebo>
	</xacro:macro>
	<xacro:jtoes suffix="0"/>
 	<xacro:jtoes suffix="1"/>
 	<xacro:jtoes suffix="2"/>
 	<xacro:jtoes suffix="3"/>
	<joint name="imu_joint" type="fixed">
    	<parent link="body"/>
		<child link="imu::link"/>
	</joint>
	<gazebo reference="imu_joint">
        <disableFixedJointLumping>1</disableFixedJointLumping> 
        <preserveFixedJoint>1</preserveFixedJoint>
    </gazebo>

	<!--    CUSTOMIZED SECTIONS	ABOVE. NOT FROM GHOST ROBOTICS.    -->
	<!-- Add ros_control plugin -->
	<gazebo>
  		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    		<robotNamespace>/spirit</robotNamespace>
	        <controlPeriod>0.002</controlPeriod>
  		</plugin>
	    <plugin name="ground_truth_estimator" filename="libground_truth_estimator.so">
            <updateRateHZ>500.0</updateRateHZ>
            <robotNamespace>/</robotNamespace>
        </plugin>
	</gazebo>
</robot>